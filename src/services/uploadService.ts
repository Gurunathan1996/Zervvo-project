import { promises as fs } from 'fs';
import processImage from '../utils/imageProcessor'; 

/**
 * Service function to process and store an uploaded image.
 * It calls the image processing utility and handles cleanup of the original file.
 * @param originalFilePath The full path to the originally uploaded file (e.g., from Multer).
 * @param originalFilename The filename generated by Multer (or original name).
 * @param outputDir The directory where the processed image should be saved.
 * @returns The full path to the processed image file.
 * @throws Error if image processing fails or file operations encounter issues.
 */
export const processAndStoreImage = async (
  originalFilePath: string,
  originalFilename: string,
  outputDir: string
): Promise<string> => {
  try {
    const processedImagePath = await processImage(
      originalFilePath,
      originalFilename,
      outputDir
    );

    await fs.unlink(originalFilePath);
    console.log(`Original file deleted: ${originalFilePath}`);

    return processedImagePath;
  } catch (error: any) {
    console.error('Error in uploadService.processAndStoreImage:', error.message);
    throw new Error(`Failed to process and store image: ${error.message}`);
  }
};
